qt(0.99, 12)
qt(0.95, 12)
y <- log(y)
summary(lm(y~x))
y
qt(0.95, 12)
mean(x)
sum((x-mean(x))^2)
x
sum(x^2)
55^2
exp(y)
Success <- c(rep(1,41+15),rep(0,12+11))
Real <- c(rep(1,41),rep(0,15),rep(1,12),rep(0,11))
summary(glm(Success~Real,family=binomial(link="logit")))
qnorm(1-0.0745/2)
bp
knitr::opts_chunk$set(echo = TRUE)
bp <- read.table("/data/CH06PR05.txt")
bp <- read.table("/Users/apple/Desktop/semester_1/3.LinearRegressionModels/data/CH06PR05.txt")
bp
names(bp) <- c("Y", "X1", "X2")
lm1 <- lm(Y~X1, bp)
fitted(lm1)
lm12 <- lm(Y~., bp)
anova(lm1)
anova(lm12)
lm_tmp <- lm(X2~X1, bp)
Y_1 <- Y-fitted(lm1)
X2_hat <- bp$X2-fitted(lm_tmp)
lm3 <- lm(Y_1~bp$X2_hat)
lm3 <- lm(Y_1~X2_hat)
summary(lm3)
sum(resid(lm3)^2)
anova(lm3)
Y_1
Y_1 <- bp$Y-fitted(lm1)
X2_hat <- bp$X2-fitted(lm_tmp)
lm3 <- lm(Y_1~X2_hat)
sum(resid(lm3)^2)
summary(lm3)
anova(lm3)
runif
C_runif
seed <- 10
new.random <- function(a = 5, c = 12, m = 16) {
out <- (a*seed + c) %% m
seed <<- out
return(out)
}
new.random()
seed
seed <- 10
new.random <- function(a = 5, c = 12, m = 16) {
out <- (a*seed + c) %% m
seed <- out
return(out)
}
new.random()
seed
seed
x <- c(1.9, 0.8, 1.1, 0.1, -0.1, 4.4, 4.6, 1.6, 5.5, 3.4)
y <- c(0.7, -1, -0.2, -1.2, -0.1, 3.4, 0, 0.8, 3.7, 2)
x
y
lm1 <- lm(y~x+x^2)
lm1
lm1 <- lm(y~x+I(x^2))
lm1
lm
lm(y~poly(x, 2))
lm1
X <- cbind(rep(1, 10), x, x^2)
X
t(X) %*% X
solve(t(X) %*% X)
solve(t(X) %*% X) * mean(resid(lm1)^2)
solve(t(X) %*% X) %*% t(X) %*% y
mean(resid(lm1)^2)
x1 <- c(1.9, 0.8, 1.1, 0.1, âˆ’0.1, 4.4, 4.6, 1.6, 5.5, 3.4)
x1 <- c(1.9, 0.8, 1.1, 0.1, -0.1, 4.4, 4.6, 1.6, 5.5, 3.4)
x2 <- c(66, 62, 64, 61, 63, 70, 68, 62, 68, 66)
y1 <- c(0.7, -1.0, -0.2, -1.2, -0.1, 3.4, 0, 0.8, 3.7, 2)
lm2 <- lm(y1~x1+x2)
X1 <- cbind(rep(1, 10), x1, x2)
X1
lm2
mean(resid(lm2)^2)
lm2
summary(lm2)
solve(t(X1) %*% X1) %*% t(X1) %*% y1
lm1
summary(lm1)
lm(y~x + I(X^2))
lm(y~poly(x, 2, raw = T))
lm1
sum((y-mean(y))^2)
sum(resid(lm1)^2)
(26.309 - 9.365564) / 2 / (9.365564 / 7)
summary(lm1)
library(ggplot2)
head(diamonds)
table(diamonds$cut)
typeof(diamonds$cut)
class(diamonds$cut)
mode(diamonds$cut)
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
library(tidyverse)
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq))
ggplot(data = demo) + geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
ggplot(data = demo) + geom_bar(mapping = aes(x = cut))
ggplot(data = demo) + geom_bar(mapping = aes(x = cut, y = freq))
ggplot(data = demo) + geom_bar(mapping = aes(y = freq))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
maximum<-(gamma(6)/(gamma(2))^3)* (1/3)^3
alpha<-1/maximum
alpha
maximum
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("QoL Data Analyst- Test.xlsx")
head(dat)
dim(dat)
library(tidyverse)
xlsx <- readxl_example("QoL Data Analyst- Test.xlsx")
install.packages("readxl")
library(readxl)
library(tidyverse)
library(readxl)
library(readxl)
library("readxl", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
setwd("~/Desktop/loan_default_prob")
head(y)
head(X)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
raw <- read.csv("LoanStats_2018Q3.csv", as.is = T)
na <- apply(raw, 2, function(x) sum(is.na(x)))
na_perc <- na / nrow(raw)
na_sort <- sort(na_perc, decreasing = T)
na_ind <- na_perc < 0.5
raw1 <- raw[na_ind]
ind <- raw1["loan_status"] == "Fully Paid" | raw1["loan_status"] == "Charged Off"
raw2 <- raw1[ind, ]
raw2 <- raw2[-1]
raw2 <- as_tibble(raw2)
cla <- raw2 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "factor"
raw2_fac <- raw2[f_ind]
raw2_num <- raw2[!f_ind]
raw2_num <- apply(raw2_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
raw2_num <- raw2_num[, !apply(raw2_num, 2, sum) == 0]
head(raw2_num)
head(raw2)
cla <- raw2 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "factor"
raw2_fac <- raw2[f_ind]
raw2_num <- raw2[!f_ind]
head(raw2_num)
raw2_num <- apply(raw2_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
raw2_num <- raw2_num[, !apply(raw2_num, 2, sum) == 0]
head(raw2_num)
head(raw2_fac)
raw2 <- as_tibble(raw2)
cla <- raw2 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "factor"
raw2_fac <- raw2[f_ind]
raw2_num <- raw2[!f_ind]
apply(raw2_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
head(raw2_num)
head(raw2_fac)
View(X)
raw <- read.csv("LoanStats_2018Q3.csv", as.is = T)
na <- apply(raw, 2, function(x) sum(is.na(x)))
na_perc <- na / nrow(raw)
plot(na)
plot(sort(na))
na_ind <- na_perc < 0.5
raw1 <- raw[na_ind]
ind <- raw1["loan_status"] == "Fully Paid" | raw1["loan_status"] == "Charged Off"
raw2 <- raw1[ind, ]
raw2 <- raw2[-1]
raw2 <- as_tibble(raw2)
raw2 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "character"
raw2_fac <- raw2[f_ind]
raw2_num <- raw2[!f_ind]
raw2_num <- apply(raw2_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
raw2_num <- raw2_num[, !apply(raw2_num, 2, sum) == 0]
raw2_num[, apply(raw2_num, 2, sum) == 0]
raw2_num <- raw2_num[, !apply(raw2_num, 2, function(x) max(x) == min(x))]
head(raw2_num)
dim(raw2_num)
dim(raw2_fac)
X <- raw2_num
y <- ifelse(raw2_fac$loan_status == "Charged Off", 1, 0)
head(y)
sum(y)
dim(y)
length(y)
110 / 4896
1-110 / 4896
dim()
dim(X)
length(y)
length(X_pc)
X <- raw2_num
y <- ifelse(raw2_fac$loan_status == "Charged Off", 1, 0)
pca_prcomp <- prcomp(X, scale. = TRUE)
pcs <- pca_prcomp$x
ev <- pca_prcomp$sdev ** 2
ev_perc <- cumsum(ev) / sum(ev)
X_pc <- pcs[, 1:13]
dim(X_pc)
logitMod <- glm(y ~ X, family=binomial(link="logit"))
predicted <- plogis(predict(logitMod, X))
head(X_pc)
logitMod <- glm(y ~ X_pc, family=binomial(link="logit"))
predicted <- plogis(predict(logitMod, X_pc))
predicted <- plogis(predict(logitMod, as.data.frame(X_pc)))
head(predicted)
sum(ifelse(predicted < 0.5, 0, 1))
sum(ifelse(predicted < 0.4, 0, 1))
sum(ifelse(predicted < 0.3, 0, 1))
sum(y)
sum(ifelse(predicted < 0.2, 0, 1))
sum(ifelse(predicted < 0.1, 0, 1))
sum(ifelse(predicted < 0.1, 0, 1) == y)
length(y)
4714 / 4896
plotROC(y, predicted)
install.packages("plotROC")
library("plotROC", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plotROC(y, predicted)
plotROC(y, predicted)
detach("package:plotROC", unload=TRUE)
library("plotROC", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plotROC(y, predicted)
plotROC(y, predicted)
misClassError(logitMod)
install.packages("InformationValue")
library("InformationValue", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plotROC(y, predicted)
misClassError(y, predicted, threshold = optCutOff)
misClassError(y, predicted, threshold = 0.1)
1-0.0372
sensitivity(X_pc, predicted, threshold = 0.1)
sensitivity(y, predicted, threshold = 0.1)
specitvity(y, predicted, threshold = 0.1)
specitivity(y, predicted, threshold = 0.1)
specificity(y, predicted, threshold = 0.1)
2/(1/0.1545455 + 1/0.9814041)
2 * 0.9814041 * 0.1545455 / (0.1545455 + 0.9814041)
library(tidyverse)
library("InformationValue")
wd
?wd
getwd
getwd()
raw <- read.csv("LoanStats_2018Q3.csv", as.is = T)
dim(raw)
na <- apply(raw, 2, function(x) sum(is.na(x)))
na_perc <- na / nrow(raw)
na_perc
head(raw)
na_ind <- na_perc > 0.5
na_ind
sum(na_ind)
plot(na_perc)
na_ind <- na_perc < 0.5
raw1 <- raw[na_ind]
dim(raw1)
dim(raw)
ind <- raw1["loan_status"] == "Fully Paid" | raw1["loan_status"] == "Charged Off"
raw2 <- raw1[ind, ]
raw2[-1]
head(raw2)
head(raw2["id"])
head(raw2["id"] == "")
sum(raw2["id"] == "")
dim(raw2["id"] == "")
raw2 <- raw2[-1]
raw2 <- as_tibble(raw2)
head(raw2)
raw2 <- raw1[ind, ]
raw2 <- raw2[-1]
raw3 <- as_tibble(raw2)
cla <- raw3 %>% summarise_all(class) %>% gather(variable, class)
cla
f_ind <- cla$class == "character"
raw3_fac <- raw3[f_ind]
raw3_num <- raw3[!f_ind]
raw3_fac
raw3_num
apply(raw3_num, 2, sum)
raw3_num <- apply(raw3_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
apply(raw3_num, 2, sum)
raw3_num <- raw3_num[, !apply(raw3_num, 2, sum) == 0]
raw3_num[, apply(raw3_num, 2, sum) == 0]
raw3_num
apply(raw3_num, 2, sum)
apply(raw3_num, 2, sum) == 0
raw3_num <- raw2_num[, !apply(raw3_num, 2, function(x) max(x) == min(x))]
apply(raw3_num, 2, function(x) max(x) == min(x))
sum(apply(raw3_num, 2, function(x) max(x) == min(x)))
which(apply(raw3_num, 2, function(x) max(x) == min(x)))
raw3_num <- raw3_num[, !apply(raw3_num, 2, function(x) max(x) == min(x))]
apply(raw3_num, 2, function(x) return(x / max(x)))
raw3_num <- apply(raw3_num, 2, function(x) return(x / max(x)))
raw3_num <- apply(raw3_num, 2, max)
raw3 <- as_tibble(raw2)
cla <- raw3 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "character"
raw3_fac <- raw3[f_ind]
raw3_num <- raw3[!f_ind]
raw3_num <- apply(raw3_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
raw3_num <- raw3_num[, !apply(raw3_num, 2, sum) == 0]
raw3_num <- raw3_num[, !apply(raw3_num, 2, function(x) max(x) == min(x))]
raw3_num <- apply(raw3_num, 2, function(x) return(x / max(x)))
apply(raw3, 2, max)
raw3 <- as_tibble(raw2)
he
raw3
cla <- raw3 %>% summarise_all(class) %>% gather(variable, class)
f_ind <- cla$class == "character"
raw3_fac <- raw3[f_ind]
raw3_num <- raw3[!f_ind]
raw3_num <- apply(raw3_num, 2, function(x) x <- ifelse(is.na(x), mean(x, na.rm = T), x))
raw3_num <- raw3_num[, !apply(raw3_num, 2, sum) == 0]
raw3_num <- raw3_num[, !apply(raw3_num, 2, function(x) max(x) == min(x))]
raw3_num <- apply(raw3_num, 2, function(x) return(x / max(x)))
raw3_num
apply(raw3_num, 2, max)
y <- ifelse(raw3_fac$loan_status == "Charged Off", 1, 0)
table(y)
y
tabel(raw3_fac$loan_status)
table(raw3_fac$loan_status)
110 / 4786
raw3_fac
apply(raw3_fac, 2, function(x) sum(is.na(x)))
X1 <- raw3_num
X2 <- raw3_fac
y <- ifelse(raw3_fac$loan_status == "Charged Off", 1, 0)
charged_ind <- y == 1
paid_ind <- !charged_ind
dim(X1)
dim(X2)
names(raw3_fac)
names(raw3_fac[-10])
X2 <- raw3_fac[-10]
dim(X2)
0.2/0.7
charged_ind
sumcharged_ind
sum(charged_ind)
sum(paid_ind)
110 / 4786
X1 <- raw3_num[charged_ind, ]
X1 <- raw3_num
raw3_num[charged_ind, ]
dim(raw3_num[charged_ind, ])
?smaple
?sample
dim(X1)
sample(1:110, size = 2200, replace = T)
X1[paid_ind, ]
dim(X1[paid_ind, ])
X1 <- raw3_num
X2 <- raw3_fac[-10]
y <- ifelse(raw3_fac$loan_status == "Charged Off", 1, 0)
charged_ind <- y == 1
paid_ind <- !charged_ind
dim(X1[paid_ind, ])
sum(charged_ind)
dim(X1[charged_ind, ])
os_ind <- sample(1:110, size = 2200, replace = T)
X1[charged_ind, ][os_ind, ]
dim(X1[charged_ind, ][os_ind, ])
dim(X1[paid_ind, ])
X_data <- rbind(X1[paid_ind, ], X1[charged_ind, ][os_ind, ])
y_data <- rbind(y[paid_ind, ], y[charged_ind, ][os_ind, ])
y[paid_ind, ] + y[charged_ind, ][os_ind, ]
c(y[paid_ind, ], y[charged_ind, ][os_ind, ])
y[paid_ind, ]
y[paid_ind]
y[charged_ind][os_ind]
y_data <- c(y[paid_ind], y[charged_ind][os_ind])
dim(y_data)
length(y_data)
dim(X_data)
X_data <- rbind(X1[paid_ind, ], X1[charged_ind, ][os_ind, ])
y_data <- c(y[paid_ind], y[charged_ind][os_ind])
dim(X_data)
dim(y_data)
length(y_data)
tmp_ind <- sample(length(y_data))
X_data <- X_data[tmp_ind, ]
y_data <- y[tmp_ind]
dim(X_data)
length(X_data)
length(y_data)
pca_prcomp <- prcomp(X_data, scale. = TRUE)
pcs <- pca_prcomp$x
ev <- pca_prcomp$sdev ** 2
ev_perc <- cumsum(ev) / sum(ev)
ev_perc
pca_prcomp$sdev
X_pc <- pcs[, 1:13]
logitMod <- glm(y_data ~ X_pc, family=binomial(link="logit"))
predicted <- plogis(predict(logitMod, as.data.frame(X_pc)))
sum(ifelse(predicted < 0.1, 0, 1))
sum(ifelse(predicted < 0.1, 0, 1) == y)
sum(ifelse(predicted < 0.1, 0, 1))
sum(ifelse(predicted < 0.1, 0, 1) == y_data)
predicted
sum(ifelse(predicted < 0.1, 0, 1))
dim(X_pc)
length(y_data)
logitMod <- glm(y_data ~ X_pc, family=binomial(link="logit"))
head(X_pc)
predicted <- plogis(predict(logitMod, as.data.frame(X_pc)))
sum(ifelse(predicted < 0.1, 0, 1))
sum(ifelse(predicted < 0.1, 0, 1) == y_data)
ifelse(predicted < 0.1, 0, 1)
ifelse(predicted < 0.1, 0, 1) == y_data
y_data
y[charged_ind][os_ind]
y[paid_ind]
X_data <- rbind(X1[paid_ind, ], X1[charged_ind, ][os_ind, ])
y_data <- c(y[paid_ind], y[charged_ind][os_ind])
pca_prcomp <- prcomp(X_data, scale. = TRUE)
pcs <- pca_prcomp$x
ev <- pca_prcomp$sdev ** 2
ev_perc <- cumsum(ev) / sum(ev)
ev_perc
logitMod <- glm(y_data ~ X_pc, family=binomial(link="logit"))
predicted <- plogis(predict(logitMod, as.data.frame(X_pc)))
sum(ifelse(predicted < 0.1, 0, 1))
# accuracy
sum(ifelse(predicted < 0.1, 0, 1) == y_data)
predicted
length(predicted)
ifelse(predicted < 0.1, 0, 1)
ifelse(predicted < 0.1, 0, 1) == y_data
sum(ifelse(predicted < 0.2, 0, 1) == y_data)
sum(ifelse(predicted < 0.3, 0, 1) == y_data)
plotROC()
sum(ifelse(predicted < 0.4, 0, 1) == y_data)
sum(ifelse(predicted < 0.5, 0, 1) == y_data)
sum(ifelse(predicted < 0.6, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.7, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.8, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.9, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 1, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.5, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.4, 0, 1) == y_data) / length(y_data)
sensitivity(y, predicted, threshold = 0.4)
specificity(y, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.4)
specificity(y_data, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.5)
specificity(y_data, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.6)
specificity(y_data, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.2)
specificity(y_data, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.3)
specificity(y_data, predicted, threshold = 0.4)
sensitivity(y_data, predicted, threshold = 0.3)
specificity(y_data, predicted, threshold = 0.3)
plotROC(y_data, predicted)
sum(ifelse(predicted < 0.5, 0, 1) == y_data) / length(y_data)
# ROC
plotROC(y_data, predicted)
sum(ifelse(predicted < 0.6, 0, 1) == y_data) / length(y_data)
# ROC
plotROC(y_data, predicted)
sum(ifelse(predicted < 0.7, 0, 1) == y_data) / length(y_data)
# ROC
plotROC(y_data, predicted)
sum(ifelse(predicted < 0.7, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.5, 0, 1) == y_data) / length(y_data)
plotROC(y_data, predicted)
dim(X_data
s
dim(X_data)
logitMod1 <- glm(y_data ~ X_data, family=binomial(link="logit"))
predicted1 <- plogis(predict(logitMod1, as.data.frame(X_data)))
plotROC(y_data, predicted1)
sum(ifelse(predicted < 0.5, 0, 1) == y_data) / length(y_data)
sum(ifelse(predicted < 0.6, 0, 1) == y_data) / length(y_data)
predicted1
plotROC(y_data, predicted)
